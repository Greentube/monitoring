image: Visual Studio 2019
configuration: Release
init:
  - git config --global core.autocrlf true
# Will build dependencies in release (optimize and portable pdbs) mode:
build_script:
#  - cmd: for /f %%a in ('dir /b test') do dotnet test -c Release test/%%a/%%a.csproj
- msbuild "C:\projects\monitoring\Greentube.Monitoring.sln" /m /verbosity:detailed /logger:"C:\Program Files\AppVeyor\BuildAgent\Appveyor.MSBuildLogger.dll"
after_build:
# packing the current Release build of all projects under src/
  - cmd: for /f %%a in ('dir /b src') do dotnet pack --no-build -c Release src/%%a/%%a.csproj
# Will build in Coverage mode (full pdbs) and upload coverage to Codecov
on_success:
  - ps: .\coverage.ps1 -UploadCodecov
environment:
  global:
    DOTNET_SKIP_FIRST_TIME_EXPERIENCE: true
    DOTNET_CLI_TELEMETRY_OPTOUT: 1
test: off
deploy: off
assembly_info:
  patch: true
  file: GlobalAssemblyInfo.cs
  assembly_version: '{version}'
  assembly_file_version: '{version}'
  assembly_informational_version: '{branch} - $(APPVEYOR_REPO_COMMIT)'
dotnet_csproj:
  patch: true
  file: 'src\**\*.csproj'
  version: '{version}'
  package_version: '{version}'
artifacts:
- path: '**\*.nupkg'
  name: greentube-monitoring-nuget-packages
